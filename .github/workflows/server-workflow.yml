name: "[CI] Server"
on:
  pull_request:
    paths:
      - ".github/workflows/server-workflow.yml"
      - "bulletin_board/server/**"
  push:
    branches:
      - develop
      - main

env:
  CI: "true"
  SIMPLECOV: "true"
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: codegram/ruby-node-python-electionguard:0.0.1
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: postgres
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.2
        if: "github.ref != 'refs/heads/develop'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 1
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Copy local electionguard
        run: cp -r /code/voting_schemes/electionguard/electionguard-python voting_schemes/electionguard
      - name: Build electionguard python wrapper
        run: make build_electionguard_python_wrapper
      - name: Install dependencies
        run: make install
      - name: Build artifacts
        run: make build
      - name: Install Rubocop
        run: gem install rubocop
      - name: Lint Ruby files
        run: cd bulletin_board/server && bundle exec rubocop -P
      - name: Lint JS files
        run: cd bulletin_board/server && npm run lint
      - name: Format JS files
        run: cd bulletin_board/server npm run format
      - name: Create database
        env:
          RAILS_ENV: test
        run: |
          cd bulletin_board/server
          bundler exec rails db:create
          bundler exec rails db:migrate
      - name: Check if GraphQL schema has changed
        env:
          RAILS_ENV: test
        run: |
          cd bulletin_board/server
          bundle exec rails server &
          sleep 5
          bundle exec rake schema:generate
          npm run schema:generate
          git diff --exit-code
      - name: Run Rspec tests
        run: cd bulletin_board/server && bundler exec rake
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./bulletin_board/server/coverage
      - name: Start Rails test server
        env:
          RAILS_ENV: test
        run: |
          cd bulletin_board/server
          bundle exec rails server -e test -p 5017 -P tmp/test_server.pid &
          sleep 5
      - name: Install cypress
        run: |
          apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
          cd bulletin_board/server && npx cypress install
      - name: Run e2e tests
        run: cd bulletin_board/server && npm run e2e:tests
      - name: Upload artifacts (screenshots)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress screenshots
          path: bulletin_board/server/cypress/screenshots/
      - name: Upload artifacts (videos)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress videos
          path: bulletin_board/server/cypress/videos/
      - name: Upload artifacts (downloads)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress downloads
          path: bulletin_board/server/cypress/downloads/
      - name: Upload artifacts (logs)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: server logs
          path: bulletin_board/server/log
